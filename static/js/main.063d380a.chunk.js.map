{"version":3,"sources":["img/img2.jpeg","components/aboutme/AboutMe.js","components/NavBar/Navbaritem.js","components/NavBar/NavBar.js","components/Habilidades/Habilidadeitems.js","components/Habilidades/Habilidades.js","components/contato/Contato.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SobreMim","className","src","MinhaFoto","alt","React","Component","NavbarItem","this","props","title","Navbar","href","Habilidadeitems","nome","style","flex","porcentagem","Habilidades","Contato","App","class","id","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wIAAAA,EAAOC,QAAU,IAA0B,mC,wPC4B5BC,G,uLAtBP,OAEI,yBAAKC,UAAU,uBAEX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,cAAcC,IAAKC,IAAWC,IAAI,4BAGrD,6BACI,wBAAIH,UAAU,WAAd,aACA,uBAAGA,UAAU,aAAb,mjB,GAZGI,IAAMC,YCadC,G,sLARP,OACI,yBAAKN,UAAU,eACX,4BAAKO,KAAKC,MAAMC,Y,GARPL,IAAMC,Y,gBCwBhBK,E,iLAnBP,OACI,yBAAKV,UAAU,UACX,kBAAC,IAAD,CAAYA,UAAU,cAAcW,KAAK,YACrC,kBAAC,EAAD,CAAYF,MAAM,eAEtB,kBAAC,IAAD,CAAYT,UAAU,cAAcW,KAAK,gBACrC,kBAAC,EAAD,CAAYF,MAAM,iBAEtB,kBAAC,IAAD,CAAYT,UAAU,cAAcW,KAAK,YACrC,kBAAC,EAAD,CAAYF,MAAM,cAEtB,kBAAC,IAAD,CAAYT,UAAU,cAAcW,KAAK,YACzC,kBAAC,EAAD,CAAYF,MAAM,kB,GAdbL,IAAMC,WCmBZO,G,sLAnBP,OACI,yBAAKZ,UAAU,wBAEX,yBAAKA,UAAU,QAAQO,KAAKC,MAAMK,MAElC,yBAAKb,UAAU,sBACX,yBAAKA,UAAU,wBAAwBc,MAAO,CAACC,KAAMR,KAAKC,MAAMQ,eAIhE,yBAAKF,MAAO,CAACC,KAAM,IAAMR,KAAKC,MAAMQ,qB,GAZ1BZ,IAAMC,YCerBY,E,iLAbP,OACI,yBAAKjB,UAAU,yBACX,wBAAIA,UAAU,eAAd,eACA,kBAAC,EAAD,CAAiBgB,YAAa,GAAIH,KAAK,WACvC,kBAAC,EAAD,CAAiBG,YAAa,GAAIH,KAAK,SACvC,kBAAC,EAAD,CAAiBG,YAAa,GAAIH,KAAK,SACvC,kBAAC,EAAD,CAAiBG,YAAa,GAAIH,KAAK,eACvC,kBAAC,EAAD,CAAiBG,YAAa,GAAIH,KAAK,e,GAT7BT,IAAMC,WCYjBa,G,uLATP,OACI,yBAAKlB,UAAU,qBACX,wBAAIA,UAAU,WAAd,gB,GAJMI,IAAMC,YCwBbc,MArBf,WACE,OACE,yBAAKC,MAAM,OACT,kBAAC,EAAD,MAEA,6BAASC,GAAG,WACV,kBAAC,EAAD,OAGF,6BAASA,GAAG,eACV,kBAAC,EAAD,OAGF,6BAASA,GAAG,WACR,kBAAC,EAAD,SCVUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.063d380a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img2.f8956252.jpeg\";","import React from 'react';\r\nimport MinhaFoto from \"../../img/img2.jpeg\";\r\nimport \"./AboutMe.css\";\r\n\r\nclass SobreMim extends React.Component{\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"sobre-mim-container\">\r\n\r\n                <div className=\"foto-container\">\r\n                    <img className=\"foto-perfil\" src={MinhaFoto} alt=\"Foto de perfil de Jess\"></img>\r\n                </div>\r\n\r\n                <div>\r\n                    <h3 className=\"aboutme\">Sobre mim</h3>\r\n                    <p className=\"descricao\">Mussum Ipsum, cacilds vidis litro abertis. Sapien in monti palavris qui num significa nadis i pareci latim. \r\n                        Paisis, filhis, espiritis santis. Si u mundo tá muito paradis? Toma um mé que o mundo vai girarzis! \r\n                        Interessantiss quisso pudia ce receita de bolis, mais bolis eu num gostis.\r\n                        Praesent malesuada urna nisi, quis volutpat erat hendrerit non. Nam vulputate dapibus. Interagi no mé, \r\n                        cursus quis, vehicula ac nisi. Per aumento de cachacis, eu reclamis. Mauris nec dolor in eros commodo tempor. \r\n                        Aenean aliquam molestie leo, vitae iaculis nisl.</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SobreMim;\r\n","import React from 'react';\r\nimport \"./NavBar.css\";\r\n\r\nclass NavbarItem extends React.Component{\r\n    // constructor(props){\r\n    //     super(props);\r\n    // }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"navbar-item\">\r\n                <h3>{this.props.title}</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavbarItem;","import React from 'react';\r\nimport NavbarItem from \"./Navbaritem\";\r\nimport \"./NavBar.css\";\r\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\r\n\r\n\r\nclass Navbar extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"navbar\">\r\n                <AnchorLink className='estoutriste' href='#aboutme'>\r\n                    <NavbarItem title=\"Sobre mim\"></NavbarItem>\r\n                </AnchorLink>\r\n                <AnchorLink className='estoutriste' href='#habilidades'>\r\n                    <NavbarItem title=\"Habilidades\"></NavbarItem>\r\n                </AnchorLink>\r\n                <AnchorLink className='estoutriste' href='#project'>\r\n                    <NavbarItem title=\"Projetos\"></NavbarItem>\r\n                </AnchorLink>\r\n                <AnchorLink className='estoutriste' href='#contato'>\r\n                <NavbarItem title=\"Contato\"></NavbarItem>\r\n                </AnchorLink>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport \"./Habilidades.css\";\r\n\r\n\r\nclass Habilidadeitems extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"habilidade-container\">\r\n                {/* Nome habilidade */}\r\n                <div className=\"lang\">{this.props.nome}</div>\r\n                \r\n                <div className=\"barrinha-container\">\r\n                    <div className=\"preenchimentoBarrinha\" style={{flex: this.props.porcentagem}} />\r\n                \r\n\r\n                {/* Parte que falta */}\r\n                    <div style={{flex: 100 - this.props.porcentagem}}>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Habilidadeitems;","import React from 'react';\r\nimport Habilidadeitems from \"./Habilidadeitems\";\r\nimport \"./Habilidades.css\";\r\n\r\nclass Habilidades extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"habilidades-container\">\r\n                <h3 className=\"habilidades\">Habilidades</h3>    \r\n                <Habilidadeitems porcentagem={60} nome=\"Python\"></Habilidadeitems>\r\n                <Habilidadeitems porcentagem={20} nome=\"Java\"></Habilidadeitems>\r\n                <Habilidadeitems porcentagem={60} nome=\"CSS3\"></Habilidadeitems>\r\n                <Habilidadeitems porcentagem={30} nome=\"Javascript\"></Habilidadeitems>\r\n                <Habilidadeitems porcentagem={60} nome=\"HTML5\"></Habilidadeitems>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Habilidades;","import React from 'react';\r\nimport \"../contato/Contato.css\";\r\n\r\n\r\n\r\nclass Contato extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-contato\">\r\n                <h3 className=\"contato\">Contato</h3>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contato;\r\n","import React from 'react';\nimport './App.css';\nimport SobreMim from \"./components/aboutme/AboutMe\";\nimport Navbar from './components/NavBar/NavBar';\nimport Habilidades from './components/Habilidades/Habilidades';\nimport Contato from './components/contato/Contato';\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\n\nfunction App() {\n  return (\n    <div class=\"App\">\n      <Navbar></Navbar>\n\n      <section id=\"aboutme\">\n        <SobreMim></SobreMim>\n      </section>\n\n      <section id=\"habilidades\">\n        <Habilidades></Habilidades>\n      </section>\n\n      <section id=\"contato\">\n          <Contato></Contato>\n      </section>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}